paths:
  /api/users/:
    get:
      summary: Obtener a todos los usuarios
      tags:
        - Users
      responses:
        200:
          description: Usuarios obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        500:
          description: Error interno del servidor

    post:
      summary: Crear un usuario
      tags:
        - Users
      parameters:
        -name: body
        in: body
        required: true
        schema:
          type: Object
          properties:
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
            age:
              type: number
            password:
              type: string
      responses:
        200:
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/user"
        500:
          description: Error interno del servidor
  /api/users/{id}:
    get:
      summary: Obtener un usuario
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: string
          description: ID del usuario autogenerado

      responses:
        200:
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/user"
        500:
          description: Error interno del servidor

    put:
      summary: actualizar un usuario
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: string
          description: ID del usuario autogenerado
        - name: body
          in: body
          required: true
          schema:
            $type: Object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              age:
                type: number
              password:
                type: string
              role:
                type: string
      responses:
        200:
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/user"
        500:
          description: Error interno del servidor

    delete:
      summary: eliminar un usuario
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: string
          description: eliminación de usuario
      responses:
        200:
          description: Usuario eliminado correctamente
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/user"
        500:
          description: Error interno del servidor

components:
  schemas:
    user:
      type: object
      properties:
        _id:
        type: ObjectId
        description: ID autogenerado por MongoDB
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario
        age:
          type: number
          description: Edad del usuario
        password:
          type: string
          description: Contraseña del usuario
      example:
        _id: ObjectId('njks2djkaw')
        first_name: Ana
        last_name: Perez
        email: anaperezgmailcom
        age: 19
        password: 1joi2n1nf43
